name: Build Test Pg-Partition

on:
  push:
    branches:
      - '*'
      - '!master'

env:
  ECR_REGISTRY: 606804169143.dkr.ecr.ap-southeast-1.amazonaws.com
  ECR_BUILD_REPO: pg-partition

jobs:
  setup_env:
    runs-on: ubuntu-20.04
    outputs:
      container_image_uri: ${{ steps.image_tag.outputs.container_image_uri }}
    steps:
      - id: image_tag
        name: Setup image tags
        run: |
          IMAGE_TAG=test
          echo "container_image_uri=$ECR_REGISTRY/$ECR_BUILD_REPO:$IMAGE_TAG" >> $GITHUB_OUTPUT

  docker_build:
    timeout-minutes: 40
    needs:
      - setup_env
    runs-on: ubuntu-20.04
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
        with:
          buildkitd-flags: --debug
          install: true

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-multi-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-multi-buildx

      - name: Configure AWS credentials SEA
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      - name: Login to ECR SEA
        uses: docker/login-action@v2
        with:
          registry: ${{ env.ECR_REGISTRY }}

      - name: Build image SEA
        uses: docker/build-push-action@v3
        env:
          CONTAINER_IMAGE_URI: ${{ needs.setup_env.outputs.container_image_uri }}
        with:
          context: .
          builder: ${{ steps.buildx.outputs.name }}
          file: Dockerfile
          push: true
          tags: ${{ env.CONTAINER_IMAGE_URI }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new
